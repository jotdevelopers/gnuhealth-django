from django.db import models
from psycopg2.sql import DEFAULT

# Create your models here.from django.db import models

# Create your models here.

class gnuhealth_pol(models.Model):
    id = models.IntegerField(primary_key=True)
    age = models.CharField(max_length=100)
    author = models.CharField(max_length=100)
    create_date = models.CharField(max_length=100)
    create_uid = models.IntegerField()
    federation_account = models.CharField(max_length=100)
    gene = models.CharField(max_length=100)
    health_condition = models.CharField(max_length=100)
    health_condition_code = models.CharField(max_length=100)
    health_condition_text = models.CharField(max_length=100)
    info = models.CharField(max_length=100)
    institution = models.CharField(max_length=100)
    medical_context = models.CharField(max_length=100)
    natural_variant = models.CharField(max_length=100)
    node = models.CharField(max_length=100)
    page = models.CharField(max_length=100)
    page_date = models.DateTimeField()
    page_type = models.CharField(max_length=100)
    person = models.IntegerField()
    phenotype = models.CharField(max_length=100)
    procedure = models.IntegerField()
    procedure_code = models.CharField(max_length=100)
    procedure_text = models.CharField(max_length=100)
    relevance = models.CharField(max_length=100)
    social_context = models.CharField(max_length=100)
    summary = models.CharField(max_length=100)
    write_date = models.DateTimeField()
    write_uid = models.IntegerField()
    fsync = models.BooleanField()

    class Meta:
        db_table = 'gnuhealth_pol'
    
class gnuhealth_pathology(models.Model):
    id = models.IntegerField(primary_key=True)
    create_date = models.DateTimeField()
    write_date = models.DateTimeField()
    create_uid = models.IntegerField()
    write_uid = models.IntegerField()
    category = models.CharField(max_length=100)
    code = models.CharField(max_length=100)
    name = models.CharField(max_length=100)
    info = models.CharField(max_length=100)
    protein = models.CharField(max_length=100)
    gene = models.CharField(max_length=100)
    chromosome = models.CharField(max_length=100)
    active = models.BooleanField()

    class Meta:
        db_table = 'gnuhealth_pathology'



class gnuhealth_patient(models.Model):
    id = models.IntegerField(primary_key=True)
    active = models.BooleanField()
    biological_sex = models.CharField(max_length=100)
    blood_type = models.CharField(max_length=100)
    create_date = models.DateTimeField()
    create_uid = models.IntegerField()
    critical_info = models.CharField(max_length=100)
    current_address = models.IntegerField()
    current_insurance = models.IntegerField()
    family = models.IntegerField()
    general_info = models.CharField(max_length=100)
    hb = models.CharField(max_length=100)
    name = models.IntegerField()
    primary_care_doctor = models.IntegerField()
    rh = models.CharField(max_length=100)
    domestic_violence = models.BooleanField()
    drug_addiction = models.BooleanField()
    hostile_area = models.BooleanField()
    hours_outside = models.IntegerField()
    prison_current = models.BooleanField()
    prison_past = models.BooleanField()
    relative_in_prison = models.BooleanField()
    school_withdrawal = models.BooleanField()
    ses_notes = models.CharField(max_length=100)
    sexual_abuse = models.BooleanField()
    single_parent = models.BooleanField()
    teenage_pregnancy = models.BooleanField()
    working_children = models.BooleanField()
    works_at_home = models.BooleanField()
    breast_self_examination = models.BooleanField()
    write_date = models.DateTimeField()
    write_uid = models.IntegerField()
    colposcopy = models.BooleanField()
    colposcopy_last = models.DateTimeField()
    fertile = models.BooleanField()
    full_term = models.IntegerField()
    mammography = models.BooleanField()
    mammography_last = models.DateTimeField()
    menarche = models.IntegerField()
    menopausal = models.BooleanField()
    menopause = models.IntegerField()
    pap_test = models.BooleanField()
    pap_test_last = models.DateTimeField()
    age_quit_drinking = models.IntegerField()
    age_quit_drugs = models.IntegerField()
    age_quit_smoking = models.IntegerField()
    age_start_drinking = models.IntegerField()
    age_start_drugs = models.IntegerField()
    age_start_smoking = models.IntegerField()
    alcohol = models.BooleanField()
    alcohol_beer_number = models.IntegerField()
    alcohol_liquor_number = models.IntegerField()
    alcohol_wine_number = models.IntegerField()
    anticonceptive = models.CharField(max_length=100)
    car_child_safety = models.BooleanField()
    car_revision = models.BooleanField()
    car_seat_belt = models.BooleanField()
    coffee = models.BooleanField()
    coffee_cups = models.IntegerField()
    diet = models.BooleanField()
    diet_belief = models.IntegerField()
    diet_info = models.CharField(max_length=100)
    drug_iv = models.BooleanField()
    drug_usage = models.BooleanField()
    eats_alone = models.BooleanField()
    ex_alcoholic = models.BooleanField()
    ex_drug_addict = models.BooleanField()
    ex_smoker = models.BooleanField()
    exercise = models.BooleanField()
    exercise_minutes_day = models.IntegerField()
    first_sexual_encounter = models.IntegerField()
    helmet = models.BooleanField()
    home_safety = models.BooleanField()
    lifestyle_info = models.CharField(max_length=100)
    motorcycle_rider = models.BooleanField()
    number_of_meals = models.IntegerField()
    prostitute = models.BooleanField()
    salt = models.BooleanField()
    second_hand_smoker = models.CharField(max_length=100)
    sex_anal = models.CharField(max_length=100)
    sex_with_prostitutes = models.BooleanField()
    sexual_partners = models.CharField(max_length=100)
    sexual_partners_number = models.IntegerField()
    sexual_practices = models.CharField(max_length=100)
    sexual_preferences = models.CharField(max_length=100)
    sexuality_info = models.CharField(max_length=100)
    sleep_during_daytime = models.BooleanField()
    sleep_hours = models.IntegerField()
    smoking = models.BooleanField()
    smoking_number = models.IntegerField()
    soft_drinks = models.BooleanField()
    traffic_laws = models.BooleanField()
    vegetarian_type = models.IntegerField()
    amputee = models.BooleanField()
    amputee_since = models.DateTimeField()
    disability = models.BooleanField()
    uxo = models.BooleanField()
    class Meta:
        db_table = 'gnuhealth_patient'



